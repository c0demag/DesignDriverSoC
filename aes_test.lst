                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.5.0 #9253 (Apr  3 2018) (Linux)
                                      4 ; This file was generated Sat Jun 29 09:11:47 2019
                                      5 ;--------------------------------------------------------
                                      6 	.module aes_test
                                      7 	.optsdcc -mmcs51 --model-small
                                      8 	
                                      9 ;--------------------------------------------------------
                                     10 ; Public variables in this module
                                     11 ;--------------------------------------------------------
                                     12 	.globl _main
                                     13 	.globl _quit
                                     14 	.globl _TF2
                                     15 	.globl _EXF2
                                     16 	.globl _RCLK
                                     17 	.globl _TCLK
                                     18 	.globl _EXEN2
                                     19 	.globl _TR2
                                     20 	.globl _C_T2
                                     21 	.globl _CP_RL2
                                     22 	.globl _T2CON_7
                                     23 	.globl _T2CON_6
                                     24 	.globl _T2CON_5
                                     25 	.globl _T2CON_4
                                     26 	.globl _T2CON_3
                                     27 	.globl _T2CON_2
                                     28 	.globl _T2CON_1
                                     29 	.globl _T2CON_0
                                     30 	.globl _PT2
                                     31 	.globl _ET2
                                     32 	.globl _CY
                                     33 	.globl _AC
                                     34 	.globl _F0
                                     35 	.globl _RS1
                                     36 	.globl _RS0
                                     37 	.globl _OV
                                     38 	.globl _F1
                                     39 	.globl _P
                                     40 	.globl _PS
                                     41 	.globl _PT1
                                     42 	.globl _PX1
                                     43 	.globl _PT0
                                     44 	.globl _PX0
                                     45 	.globl _RD
                                     46 	.globl _WR
                                     47 	.globl _T1
                                     48 	.globl _T0
                                     49 	.globl _INT1
                                     50 	.globl _INT0
                                     51 	.globl _TXD
                                     52 	.globl _RXD
                                     53 	.globl _P3_7
                                     54 	.globl _P3_6
                                     55 	.globl _P3_5
                                     56 	.globl _P3_4
                                     57 	.globl _P3_3
                                     58 	.globl _P3_2
                                     59 	.globl _P3_1
                                     60 	.globl _P3_0
                                     61 	.globl _EA
                                     62 	.globl _ES
                                     63 	.globl _ET1
                                     64 	.globl _EX1
                                     65 	.globl _ET0
                                     66 	.globl _EX0
                                     67 	.globl _P2_7
                                     68 	.globl _P2_6
                                     69 	.globl _P2_5
                                     70 	.globl _P2_4
                                     71 	.globl _P2_3
                                     72 	.globl _P2_2
                                     73 	.globl _P2_1
                                     74 	.globl _P2_0
                                     75 	.globl _SM0
                                     76 	.globl _SM1
                                     77 	.globl _SM2
                                     78 	.globl _REN
                                     79 	.globl _TB8
                                     80 	.globl _RB8
                                     81 	.globl _TI
                                     82 	.globl _RI
                                     83 	.globl _P1_7
                                     84 	.globl _P1_6
                                     85 	.globl _P1_5
                                     86 	.globl _P1_4
                                     87 	.globl _P1_3
                                     88 	.globl _P1_2
                                     89 	.globl _P1_1
                                     90 	.globl _P1_0
                                     91 	.globl _TF1
                                     92 	.globl _TR1
                                     93 	.globl _TF0
                                     94 	.globl _TR0
                                     95 	.globl _IE1
                                     96 	.globl _IT1
                                     97 	.globl _IE0
                                     98 	.globl _IT0
                                     99 	.globl _P0_7
                                    100 	.globl _P0_6
                                    101 	.globl _P0_5
                                    102 	.globl _P0_4
                                    103 	.globl _P0_3
                                    104 	.globl _P0_2
                                    105 	.globl _P0_1
                                    106 	.globl _P0_0
                                    107 	.globl _TH2
                                    108 	.globl _TL2
                                    109 	.globl _RCAP2H
                                    110 	.globl _RCAP2L
                                    111 	.globl _T2CON
                                    112 	.globl _B
                                    113 	.globl _ACC
                                    114 	.globl _PSW
                                    115 	.globl _IP
                                    116 	.globl _P3
                                    117 	.globl _IE
                                    118 	.globl _P2
                                    119 	.globl _SBUF
                                    120 	.globl _SCON
                                    121 	.globl _P1
                                    122 	.globl _TH1
                                    123 	.globl _TH0
                                    124 	.globl _TL1
                                    125 	.globl _TL0
                                    126 	.globl _TMOD
                                    127 	.globl _TCON
                                    128 	.globl _PCON
                                    129 	.globl _DPH
                                    130 	.globl _DPL
                                    131 	.globl _SP
                                    132 	.globl _P0
                                    133 	.globl _pt_rden
                                    134 	.globl _pt_wren
                                    135 	.globl _data
                                    136 	.globl _aes_reg_key1
                                    137 	.globl _aes_reg_key0
                                    138 	.globl _aes_reg_ctr
                                    139 	.globl _aes_reg_len
                                    140 	.globl _aes_reg_addr
                                    141 	.globl _aes_reg_state
                                    142 	.globl _aes_reg_start
                                    143 ;--------------------------------------------------------
                                    144 ; special function registers
                                    145 ;--------------------------------------------------------
                                    146 	.area RSEG    (ABS,DATA)
      000000                        147 	.org 0x0000
                           000080   148 _P0	=	0x0080
                           000081   149 _SP	=	0x0081
                           000082   150 _DPL	=	0x0082
                           000083   151 _DPH	=	0x0083
                           000087   152 _PCON	=	0x0087
                           000088   153 _TCON	=	0x0088
                           000089   154 _TMOD	=	0x0089
                           00008A   155 _TL0	=	0x008a
                           00008B   156 _TL1	=	0x008b
                           00008C   157 _TH0	=	0x008c
                           00008D   158 _TH1	=	0x008d
                           000090   159 _P1	=	0x0090
                           000098   160 _SCON	=	0x0098
                           000099   161 _SBUF	=	0x0099
                           0000A0   162 _P2	=	0x00a0
                           0000A8   163 _IE	=	0x00a8
                           0000B0   164 _P3	=	0x00b0
                           0000B8   165 _IP	=	0x00b8
                           0000D0   166 _PSW	=	0x00d0
                           0000E0   167 _ACC	=	0x00e0
                           0000F0   168 _B	=	0x00f0
                           0000C8   169 _T2CON	=	0x00c8
                           0000CA   170 _RCAP2L	=	0x00ca
                           0000CB   171 _RCAP2H	=	0x00cb
                           0000CC   172 _TL2	=	0x00cc
                           0000CD   173 _TH2	=	0x00cd
                                    174 ;--------------------------------------------------------
                                    175 ; special function bits
                                    176 ;--------------------------------------------------------
                                    177 	.area RSEG    (ABS,DATA)
      000000                        178 	.org 0x0000
                           000080   179 _P0_0	=	0x0080
                           000081   180 _P0_1	=	0x0081
                           000082   181 _P0_2	=	0x0082
                           000083   182 _P0_3	=	0x0083
                           000084   183 _P0_4	=	0x0084
                           000085   184 _P0_5	=	0x0085
                           000086   185 _P0_6	=	0x0086
                           000087   186 _P0_7	=	0x0087
                           000088   187 _IT0	=	0x0088
                           000089   188 _IE0	=	0x0089
                           00008A   189 _IT1	=	0x008a
                           00008B   190 _IE1	=	0x008b
                           00008C   191 _TR0	=	0x008c
                           00008D   192 _TF0	=	0x008d
                           00008E   193 _TR1	=	0x008e
                           00008F   194 _TF1	=	0x008f
                           000090   195 _P1_0	=	0x0090
                           000091   196 _P1_1	=	0x0091
                           000092   197 _P1_2	=	0x0092
                           000093   198 _P1_3	=	0x0093
                           000094   199 _P1_4	=	0x0094
                           000095   200 _P1_5	=	0x0095
                           000096   201 _P1_6	=	0x0096
                           000097   202 _P1_7	=	0x0097
                           000098   203 _RI	=	0x0098
                           000099   204 _TI	=	0x0099
                           00009A   205 _RB8	=	0x009a
                           00009B   206 _TB8	=	0x009b
                           00009C   207 _REN	=	0x009c
                           00009D   208 _SM2	=	0x009d
                           00009E   209 _SM1	=	0x009e
                           00009F   210 _SM0	=	0x009f
                           0000A0   211 _P2_0	=	0x00a0
                           0000A1   212 _P2_1	=	0x00a1
                           0000A2   213 _P2_2	=	0x00a2
                           0000A3   214 _P2_3	=	0x00a3
                           0000A4   215 _P2_4	=	0x00a4
                           0000A5   216 _P2_5	=	0x00a5
                           0000A6   217 _P2_6	=	0x00a6
                           0000A7   218 _P2_7	=	0x00a7
                           0000A8   219 _EX0	=	0x00a8
                           0000A9   220 _ET0	=	0x00a9
                           0000AA   221 _EX1	=	0x00aa
                           0000AB   222 _ET1	=	0x00ab
                           0000AC   223 _ES	=	0x00ac
                           0000AF   224 _EA	=	0x00af
                           0000B0   225 _P3_0	=	0x00b0
                           0000B1   226 _P3_1	=	0x00b1
                           0000B2   227 _P3_2	=	0x00b2
                           0000B3   228 _P3_3	=	0x00b3
                           0000B4   229 _P3_4	=	0x00b4
                           0000B5   230 _P3_5	=	0x00b5
                           0000B6   231 _P3_6	=	0x00b6
                           0000B7   232 _P3_7	=	0x00b7
                           0000B0   233 _RXD	=	0x00b0
                           0000B1   234 _TXD	=	0x00b1
                           0000B2   235 _INT0	=	0x00b2
                           0000B3   236 _INT1	=	0x00b3
                           0000B4   237 _T0	=	0x00b4
                           0000B5   238 _T1	=	0x00b5
                           0000B6   239 _WR	=	0x00b6
                           0000B7   240 _RD	=	0x00b7
                           0000B8   241 _PX0	=	0x00b8
                           0000B9   242 _PT0	=	0x00b9
                           0000BA   243 _PX1	=	0x00ba
                           0000BB   244 _PT1	=	0x00bb
                           0000BC   245 _PS	=	0x00bc
                           0000D0   246 _P	=	0x00d0
                           0000D1   247 _F1	=	0x00d1
                           0000D2   248 _OV	=	0x00d2
                           0000D3   249 _RS0	=	0x00d3
                           0000D4   250 _RS1	=	0x00d4
                           0000D5   251 _F0	=	0x00d5
                           0000D6   252 _AC	=	0x00d6
                           0000D7   253 _CY	=	0x00d7
                           0000AD   254 _ET2	=	0x00ad
                           0000BD   255 _PT2	=	0x00bd
                           0000C8   256 _T2CON_0	=	0x00c8
                           0000C9   257 _T2CON_1	=	0x00c9
                           0000CA   258 _T2CON_2	=	0x00ca
                           0000CB   259 _T2CON_3	=	0x00cb
                           0000CC   260 _T2CON_4	=	0x00cc
                           0000CD   261 _T2CON_5	=	0x00cd
                           0000CE   262 _T2CON_6	=	0x00ce
                           0000CF   263 _T2CON_7	=	0x00cf
                           0000C8   264 _CP_RL2	=	0x00c8
                           0000C9   265 _C_T2	=	0x00c9
                           0000CA   266 _TR2	=	0x00ca
                           0000CB   267 _EXEN2	=	0x00cb
                           0000CC   268 _TCLK	=	0x00cc
                           0000CD   269 _RCLK	=	0x00cd
                           0000CE   270 _EXF2	=	0x00ce
                           0000CF   271 _TF2	=	0x00cf
                                    272 ;--------------------------------------------------------
                                    273 ; overlayable register banks
                                    274 ;--------------------------------------------------------
                                    275 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        276 	.ds 8
                                    277 ;--------------------------------------------------------
                                    278 ; internal ram data
                                    279 ;--------------------------------------------------------
                                    280 	.area DSEG    (DATA)
                                    281 ;--------------------------------------------------------
                                    282 ; overlayable items in internal ram 
                                    283 ;--------------------------------------------------------
                                    284 ;--------------------------------------------------------
                                    285 ; Stack segment in internal ram 
                                    286 ;--------------------------------------------------------
                                    287 	.area	SSEG
      000000                        288 __start__stack:
      000000                        289 	.ds	1
                                    290 
                                    291 ;--------------------------------------------------------
                                    292 ; indirectly addressable internal ram data
                                    293 ;--------------------------------------------------------
                                    294 	.area ISEG    (DATA)
                                    295 ;--------------------------------------------------------
                                    296 ; absolute internal ram data
                                    297 ;--------------------------------------------------------
                                    298 	.area IABS    (ABS,DATA)
                                    299 	.area IABS    (ABS,DATA)
                                    300 ;--------------------------------------------------------
                                    301 ; bit data
                                    302 ;--------------------------------------------------------
                                    303 	.area BSEG    (BIT)
                                    304 ;--------------------------------------------------------
                                    305 ; paged external ram data
                                    306 ;--------------------------------------------------------
                                    307 	.area PSEG    (PAG,XDATA)
                                    308 ;--------------------------------------------------------
                                    309 ; external ram data
                                    310 ;--------------------------------------------------------
                                    311 	.area XSEG    (XDATA)
                           00FF00   312 _aes_reg_start	=	0xff00
                           00FF01   313 _aes_reg_state	=	0xff01
                           00FF02   314 _aes_reg_addr	=	0xff02
                           00FF04   315 _aes_reg_len	=	0xff04
                           00FF10   316 _aes_reg_ctr	=	0xff10
                           00FF20   317 _aes_reg_key0	=	0xff20
                           00FF30   318 _aes_reg_key1	=	0xff30
                           00E000   319 _data	=	0xe000
                           00FF80   320 _pt_wren	=	0xff80
                           00FFA0   321 _pt_rden	=	0xffa0
                                    322 ;--------------------------------------------------------
                                    323 ; absolute external ram data
                                    324 ;--------------------------------------------------------
                                    325 	.area XABS    (ABS,XDATA)
                                    326 ;--------------------------------------------------------
                                    327 ; external initialized ram data
                                    328 ;--------------------------------------------------------
                                    329 	.area XISEG   (XDATA)
                                    330 	.area HOME    (CODE)
                                    331 	.area GSINIT0 (CODE)
                                    332 	.area GSINIT1 (CODE)
                                    333 	.area GSINIT2 (CODE)
                                    334 	.area GSINIT3 (CODE)
                                    335 	.area GSINIT4 (CODE)
                                    336 	.area GSINIT5 (CODE)
                                    337 	.area GSINIT  (CODE)
                                    338 	.area GSFINAL (CODE)
                                    339 	.area CSEG    (CODE)
                                    340 ;--------------------------------------------------------
                                    341 ; interrupt vector 
                                    342 ;--------------------------------------------------------
                                    343 	.area HOME    (CODE)
      000000                        344 __interrupt_vect:
      000000 02r00r00         [24]  345 	ljmp	__sdcc_gsinit_startup
                                    346 ;--------------------------------------------------------
                                    347 ; global & static initialisations
                                    348 ;--------------------------------------------------------
                                    349 	.area HOME    (CODE)
                                    350 	.area GSINIT  (CODE)
                                    351 	.area GSFINAL (CODE)
                                    352 	.area GSINIT  (CODE)
                                    353 	.globl __sdcc_gsinit_startup
                                    354 	.globl __sdcc_program_startup
                                    355 	.globl __start__stack
                                    356 	.globl __mcs51_genXINIT
                                    357 	.globl __mcs51_genXRAMCLEAR
                                    358 	.globl __mcs51_genRAMCLEAR
                                    359 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  360 	ljmp	__sdcc_program_startup
                                    361 ;--------------------------------------------------------
                                    362 ; Home
                                    363 ;--------------------------------------------------------
                                    364 	.area HOME    (CODE)
                                    365 	.area HOME    (CODE)
      000003                        366 __sdcc_program_startup:
      000003 02r00r26         [24]  367 	ljmp	_main
                                    368 ;	return from main will return to caller
                                    369 ;--------------------------------------------------------
                                    370 ; code
                                    371 ;--------------------------------------------------------
                                    372 	.area CSEG    (CODE)
                                    373 ;------------------------------------------------------------
                                    374 ;Allocation info for local variables in function 'quit'
                                    375 ;------------------------------------------------------------
                                    376 ;	aes_test.c:16: void quit() {
                                    377 ;	-----------------------------------------
                                    378 ;	 function quit
                                    379 ;	-----------------------------------------
      000000                        380 _quit:
                           000007   381 	ar7 = 0x07
                           000006   382 	ar6 = 0x06
                           000005   383 	ar5 = 0x05
                           000004   384 	ar4 = 0x04
                           000003   385 	ar3 = 0x03
                           000002   386 	ar2 = 0x02
                           000001   387 	ar1 = 0x01
                           000000   388 	ar0 = 0x00
                                    389 ;	aes_test.c:17: P0 = P1 = P2 = P3 = 0xDE;
      000000 75 B0 DE         [24]  390 	mov	_P3,#0xDE
      000003 75 A0 DE         [24]  391 	mov	_P2,#0xDE
      000006 75 90 DE         [24]  392 	mov	_P1,#0xDE
      000009 75 80 DE         [24]  393 	mov	_P0,#0xDE
                                    394 ;	aes_test.c:18: P0 = P1 = P2 = P3 = 0xAD;
      00000C 75 B0 AD         [24]  395 	mov	_P3,#0xAD
      00000F 75 A0 AD         [24]  396 	mov	_P2,#0xAD
      000012 75 90 AD         [24]  397 	mov	_P1,#0xAD
      000015 75 80 AD         [24]  398 	mov	_P0,#0xAD
                                    399 ;	aes_test.c:19: P0 = P1 = P2 = P3 = 0x00;
      000018 75 B0 00         [24]  400 	mov	_P3,#0x00
      00001B 75 A0 00         [24]  401 	mov	_P2,#0x00
      00001E 75 90 00         [24]  402 	mov	_P1,#0x00
      000021 75 80 00         [24]  403 	mov	_P0,#0x00
                                    404 ;	aes_test.c:20: while(1);
      000024                        405 00102$:
      000024 80 FE            [24]  406 	sjmp	00102$
                                    407 ;------------------------------------------------------------
                                    408 ;Allocation info for local variables in function 'main'
                                    409 ;------------------------------------------------------------
                                    410 ;i                         Allocated to registers r4 r5 
                                    411 ;good                      Allocated to registers r6 r7 
                                    412 ;repeat                    Allocated to registers 
                                    413 ;------------------------------------------------------------
                                    414 ;	aes_test.c:38: void main() {
                                    415 ;	-----------------------------------------
                                    416 ;	 function main
                                    417 ;	-----------------------------------------
      000026                        418 _main:
                                    419 ;	aes_test.c:41: int good=1;
      000026 7E 01            [12]  420 	mov	r6,#0x01
      000028 7F 00            [12]  421 	mov	r7,#0x00
                                    422 ;	aes_test.c:45: for(i=0; i < 32; i++) {
      00002A 7C 00            [12]  423 	mov	r4,#0x00
      00002C 7D 00            [12]  424 	mov	r5,#0x00
      00002E                        425 00115$:
                                    426 ;	aes_test.c:46: pt_wren[i] = 0xff;
      00002E EC               [12]  427 	mov	a,r4
      00002F 24 80            [12]  428 	add	a,#_pt_wren
      000031 F5 82            [12]  429 	mov	dpl,a
      000033 ED               [12]  430 	mov	a,r5
      000034 34 FF            [12]  431 	addc	a,#(_pt_wren >> 8)
      000036 F5 83            [12]  432 	mov	dph,a
      000038 74 FF            [12]  433 	mov	a,#0xFF
      00003A F0               [24]  434 	movx	@dptr,a
                                    435 ;	aes_test.c:47: pt_rden[i] = 0xff;
      00003B EC               [12]  436 	mov	a,r4
      00003C 24 A0            [12]  437 	add	a,#_pt_rden
      00003E F5 82            [12]  438 	mov	dpl,a
      000040 ED               [12]  439 	mov	a,r5
      000041 34 FF            [12]  440 	addc	a,#(_pt_rden >> 8)
      000043 F5 83            [12]  441 	mov	dph,a
      000045 74 FF            [12]  442 	mov	a,#0xFF
      000047 F0               [24]  443 	movx	@dptr,a
                                    444 ;	aes_test.c:45: for(i=0; i < 32; i++) {
      000048 0C               [12]  445 	inc	r4
      000049 BC 00 01         [24]  446 	cjne	r4,#0x00,00182$
      00004C 0D               [12]  447 	inc	r5
      00004D                        448 00182$:
      00004D C3               [12]  449 	clr	c
      00004E EC               [12]  450 	mov	a,r4
      00004F 94 20            [12]  451 	subb	a,#0x20
      000051 ED               [12]  452 	mov	a,r5
      000052 64 80            [12]  453 	xrl	a,#0x80
      000054 94 80            [12]  454 	subb	a,#0x80
      000056 40 D6            [24]  455 	jc	00115$
                                    456 ;	aes_test.c:51: for(i=0; i < 32; i++) {
      000058 7C 00            [12]  457 	mov	r4,#0x00
      00005A 7D 00            [12]  458 	mov	r5,#0x00
      00005C                        459 00117$:
                                    460 ;	aes_test.c:52: data[i]=i;
      00005C 8C 82            [24]  461 	mov	dpl,r4
      00005E 74 E0            [12]  462 	mov	a,#(_data >> 8)
      000060 2D               [12]  463 	add	a,r5
      000061 F5 83            [12]  464 	mov	dph,a
      000063 8C 03            [24]  465 	mov	ar3,r4
      000065 EB               [12]  466 	mov	a,r3
      000066 F0               [24]  467 	movx	@dptr,a
                                    468 ;	aes_test.c:51: for(i=0; i < 32; i++) {
      000067 0C               [12]  469 	inc	r4
      000068 BC 00 01         [24]  470 	cjne	r4,#0x00,00184$
      00006B 0D               [12]  471 	inc	r5
      00006C                        472 00184$:
      00006C C3               [12]  473 	clr	c
      00006D EC               [12]  474 	mov	a,r4
      00006E 94 20            [12]  475 	subb	a,#0x20
      000070 ED               [12]  476 	mov	a,r5
      000071 64 80            [12]  477 	xrl	a,#0x80
      000073 94 80            [12]  478 	subb	a,#0x80
      000075 40 E5            [24]  479 	jc	00117$
                                    480 ;	aes_test.c:56: aes_reg_addr = 0xE000;
      000077 90 FF 02         [24]  481 	mov	dptr,#_aes_reg_addr
      00007A E4               [12]  482 	clr	a
      00007B F0               [24]  483 	movx	@dptr,a
      00007C 74 E0            [12]  484 	mov	a,#0xE0
      00007E A3               [24]  485 	inc	dptr
      00007F F0               [24]  486 	movx	@dptr,a
                                    487 ;	aes_test.c:57: aes_reg_len = 32;
      000080 90 FF 04         [24]  488 	mov	dptr,#_aes_reg_len
      000083 74 20            [12]  489 	mov	a,#0x20
      000085 F0               [24]  490 	movx	@dptr,a
      000086 E4               [12]  491 	clr	a
      000087 A3               [24]  492 	inc	dptr
      000088 F0               [24]  493 	movx	@dptr,a
                                    494 ;	aes_test.c:58: for(i=0; i < 16; i++) { aes_reg_ctr[i] = i*i*i; }
      000089 7C 00            [12]  495 	mov	r4,#0x00
      00008B 7D 00            [12]  496 	mov	r5,#0x00
      00008D                        497 00119$:
      00008D EC               [12]  498 	mov	a,r4
      00008E 24 10            [12]  499 	add	a,#_aes_reg_ctr
      000090 F5 82            [12]  500 	mov	dpl,a
      000092 ED               [12]  501 	mov	a,r5
      000093 34 FF            [12]  502 	addc	a,#(_aes_reg_ctr >> 8)
      000095 F5 83            [12]  503 	mov	dph,a
      000097 8C 03            [24]  504 	mov	ar3,r4
      000099 EB               [12]  505 	mov	a,r3
      00009A F5 F0            [12]  506 	mov	b,a
      00009C A4               [48]  507 	mul	ab
      00009D 8B F0            [24]  508 	mov	b,r3
      00009F A4               [48]  509 	mul	ab
      0000A0 FB               [12]  510 	mov	r3,a
      0000A1 F0               [24]  511 	movx	@dptr,a
      0000A2 0C               [12]  512 	inc	r4
      0000A3 BC 00 01         [24]  513 	cjne	r4,#0x00,00186$
      0000A6 0D               [12]  514 	inc	r5
      0000A7                        515 00186$:
      0000A7 C3               [12]  516 	clr	c
      0000A8 EC               [12]  517 	mov	a,r4
      0000A9 94 10            [12]  518 	subb	a,#0x10
      0000AB ED               [12]  519 	mov	a,r5
      0000AC 64 80            [12]  520 	xrl	a,#0x80
      0000AE 94 80            [12]  521 	subb	a,#0x80
      0000B0 40 DB            [24]  522 	jc	00119$
                                    523 ;	aes_test.c:59: for(i=0; i < 16; i++) { aes_reg_key0[i] = i | (i << 4); }
      0000B2 7C 00            [12]  524 	mov	r4,#0x00
      0000B4 7D 00            [12]  525 	mov	r5,#0x00
      0000B6                        526 00121$:
      0000B6 EC               [12]  527 	mov	a,r4
      0000B7 24 20            [12]  528 	add	a,#_aes_reg_key0
      0000B9 F5 82            [12]  529 	mov	dpl,a
      0000BB ED               [12]  530 	mov	a,r5
      0000BC 34 FF            [12]  531 	addc	a,#(_aes_reg_key0 >> 8)
      0000BE F5 83            [12]  532 	mov	dph,a
      0000C0 8C 03            [24]  533 	mov	ar3,r4
      0000C2 EB               [12]  534 	mov	a,r3
      0000C3 C4               [12]  535 	swap	a
      0000C4 54 F0            [12]  536 	anl	a,#0xF0
      0000C6 FB               [12]  537 	mov	r3,a
      0000C7 33               [12]  538 	rlc	a
      0000C8 95 E0            [12]  539 	subb	a,acc
      0000CA FA               [12]  540 	mov	r2,a
      0000CB EC               [12]  541 	mov	a,r4
      0000CC 42 03            [12]  542 	orl	ar3,a
      0000CE ED               [12]  543 	mov	a,r5
      0000CF 42 02            [12]  544 	orl	ar2,a
      0000D1 EB               [12]  545 	mov	a,r3
      0000D2 F0               [24]  546 	movx	@dptr,a
      0000D3 0C               [12]  547 	inc	r4
      0000D4 BC 00 01         [24]  548 	cjne	r4,#0x00,00188$
      0000D7 0D               [12]  549 	inc	r5
      0000D8                        550 00188$:
      0000D8 C3               [12]  551 	clr	c
      0000D9 EC               [12]  552 	mov	a,r4
      0000DA 94 10            [12]  553 	subb	a,#0x10
      0000DC ED               [12]  554 	mov	a,r5
      0000DD 64 80            [12]  555 	xrl	a,#0x80
      0000DF 94 80            [12]  556 	subb	a,#0x80
      0000E1 40 D3            [24]  557 	jc	00121$
                                    558 ;	aes_test.c:62: aes_reg_start = 1;
      0000E3 90 FF 00         [24]  559 	mov	dptr,#_aes_reg_start
      0000E6 74 01            [12]  560 	mov	a,#0x01
      0000E8 F0               [24]  561 	movx	@dptr,a
                                    562 ;	aes_test.c:64: while(aes_reg_state != 0);
      0000E9                        563 00105$:
      0000E9 90 FF 01         [24]  564 	mov	dptr,#_aes_reg_state
      0000EC E0               [24]  565 	movx	a,@dptr
      0000ED E0               [24]  566 	movx	a,@dptr
                                    567 ;	aes_test.c:67: for(i=0; i < 32; i++) {
      0000EE 70 F9            [24]  568 	jnz	00105$
      0000F0 FC               [12]  569 	mov	r4,a
      0000F1 FD               [12]  570 	mov	r5,a
      0000F2                        571 00123$:
                                    572 ;	aes_test.c:68: P0 = data[i];
      0000F2 8C 82            [24]  573 	mov	dpl,r4
      0000F4 74 E0            [12]  574 	mov	a,#(_data >> 8)
      0000F6 2D               [12]  575 	add	a,r5
      0000F7 F5 83            [12]  576 	mov	dph,a
      0000F9 E0               [24]  577 	movx	a,@dptr
      0000FA F5 80            [12]  578 	mov	_P0,a
                                    579 ;	aes_test.c:67: for(i=0; i < 32; i++) {
      0000FC 0C               [12]  580 	inc	r4
      0000FD BC 00 01         [24]  581 	cjne	r4,#0x00,00191$
      000100 0D               [12]  582 	inc	r5
      000101                        583 00191$:
      000101 C3               [12]  584 	clr	c
      000102 EC               [12]  585 	mov	a,r4
      000103 94 20            [12]  586 	subb	a,#0x20
      000105 ED               [12]  587 	mov	a,r5
      000106 64 80            [12]  588 	xrl	a,#0x80
      000108 94 80            [12]  589 	subb	a,#0x80
      00010A 40 E6            [24]  590 	jc	00123$
                                    591 ;	aes_test.c:72: aes_reg_start = 1;
      00010C 90 FF 00         [24]  592 	mov	dptr,#_aes_reg_start
      00010F 74 01            [12]  593 	mov	a,#0x01
      000111 F0               [24]  594 	movx	@dptr,a
                                    595 ;	aes_test.c:73: while(aes_reg_state != 0)  {
      000112                        596 00109$:
      000112 90 FF 01         [24]  597 	mov	dptr,#_aes_reg_state
      000115 E0               [24]  598 	movx	a,@dptr
      000116 E0               [24]  599 	movx	a,@dptr
      000117 60 1A            [24]  600 	jz	00144$
                                    601 ;	aes_test.c:99: __endasm;
                                    602 ;
      000119 00               [12]  603 	nop;
      00011A 00               [12]  604 	nop;
      00011B 00               [12]  605 	nop;
      00011C 00               [12]  606 	nop;
      00011D 00               [12]  607 	nop;
      00011E 00               [12]  608 	nop;
      00011F 00               [12]  609 	nop;
      000120 00               [12]  610 	nop;
      000121 00               [12]  611 	nop;
      000122 00               [12]  612 	nop;
      000123 00               [12]  613 	nop;
      000124 00               [12]  614 	nop;
      000125 00               [12]  615 	nop;
      000126 00               [12]  616 	nop;
      000127 00               [12]  617 	nop;
      000128 00               [12]  618 	nop;
      000129 00               [12]  619 	nop;
      00012A 00               [12]  620 	nop;
      00012B 00               [12]  621 	nop;
      00012C 00               [12]  622 	nop;
      00012D 00               [12]  623 	nop;
      00012E 00               [12]  624 	nop;
      00012F 00               [12]  625 	nop;
      000130 00               [12]  626 	nop;
                                    627 ;	aes_test.c:108: for(i=0; i < 32; i++) {
      000131 80 DF            [24]  628 	sjmp	00109$
      000133                        629 00144$:
      000133 7C 00            [12]  630 	mov	r4,#0x00
      000135 7D 00            [12]  631 	mov	r5,#0x00
      000137                        632 00125$:
                                    633 ;	aes_test.c:109: if(data[i] != i) {
      000137 8C 82            [24]  634 	mov	dpl,r4
      000139 74 E0            [12]  635 	mov	a,#(_data >> 8)
      00013B 2D               [12]  636 	add	a,r5
      00013C F5 83            [12]  637 	mov	dph,a
      00013E E0               [24]  638 	movx	a,@dptr
      00013F FB               [12]  639 	mov	r3,a
      000140 7A 00            [12]  640 	mov	r2,#0x00
      000142 B5 04 06         [24]  641 	cjne	a,ar4,00194$
      000145 EA               [12]  642 	mov	a,r2
      000146 B5 05 02         [24]  643 	cjne	a,ar5,00194$
      000149 80 06            [24]  644 	sjmp	00126$
      00014B                        645 00194$:
                                    646 ;	aes_test.c:110: good =0;
      00014B 7E 00            [12]  647 	mov	r6,#0x00
      00014D 7F 00            [12]  648 	mov	r7,#0x00
                                    649 ;	aes_test.c:111: break;
      00014F 80 10            [24]  650 	sjmp	00114$
      000151                        651 00126$:
                                    652 ;	aes_test.c:108: for(i=0; i < 32; i++) {
      000151 0C               [12]  653 	inc	r4
      000152 BC 00 01         [24]  654 	cjne	r4,#0x00,00195$
      000155 0D               [12]  655 	inc	r5
      000156                        656 00195$:
      000156 C3               [12]  657 	clr	c
      000157 EC               [12]  658 	mov	a,r4
      000158 94 20            [12]  659 	subb	a,#0x20
      00015A ED               [12]  660 	mov	a,r5
      00015B 64 80            [12]  661 	xrl	a,#0x80
      00015D 94 80            [12]  662 	subb	a,#0x80
      00015F 40 D6            [24]  663 	jc	00125$
      000161                        664 00114$:
                                    665 ;	aes_test.c:114: P0 = good;
      000161 8E 80            [24]  666 	mov	_P0,r6
                                    667 ;	aes_test.c:116: quit();
      000163 02r00r00         [24]  668 	ljmp	_quit
                                    669 	.area CSEG    (CODE)
                                    670 	.area CONST   (CODE)
                                    671 	.area XINIT   (CODE)
                                    672 	.area CABS    (ABS,CODE)
