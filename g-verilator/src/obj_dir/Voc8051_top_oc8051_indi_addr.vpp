`begin_keywords "1800-2012"
`line 1 "oc8051_indi_addr.v" 1
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 

`line 45 "oc8051_indi_addr.v" 0
 

`line 47 "oc8051_indi_addr.v" 0
 
 
 

`line 51 "oc8051_indi_addr.v" 0
 
 

`line 54 "oc8051_indi_addr.v" 0
 
 



`line 59 "oc8051_indi_addr.v" 0
 
 
`line 60 "oc8051_indi_addr.v" 0
`line 1 "oc8051_timescale.v" 1

`line 3 "oc8051_timescale.v" 0

`line 3 "oc8051_timescale.v" 0
`timescale 1ns/10ps

`line 5 "oc8051_timescale.v" 2
`line 60 "oc8051_indi_addr.v" 0

`line 61 "oc8051_indi_addr.v" 0
 


`line 64 "oc8051_indi_addr.v" 0
module oc8051_indi_addr (clk, rst, wr_addr, data_in, wr, wr_bit, ri_out, sel, bank, iram0, iram1, iram8, iram9);



`line 68 "oc8051_indi_addr.v" 0
input        clk,	 
             rst,	 
	     wr,	 
             sel,	 
	     wr_bit;	 
input  [1:0] bank;	 
input  [7:0] data_in;	 
input  [7:0] wr_addr;	 
input  [7:0] iram0, iram1, iram8, iram9;

`line 78 "oc8051_indi_addr.v" 0
output [7:0] ri_out;

`line 80 "oc8051_indi_addr.v" 0
 
reg wr_bit_r;


`line 84 "oc8051_indi_addr.v" 0
reg [7:0] buff [0:7];

`line 86 "oc8051_indi_addr.v" 0
wire [7:0] buff0 = buff[0];
wire [7:0] buff1 = buff[1];
wire [7:0] buff2 = buff[2];
wire [7:0] buff3 = buff[3];
wire [7:0] buff4 = buff[4];
wire [7:0] buff5 = buff[5];
wire [7:0] buff6 = buff[6];
wire [7:0] buff7 = buff[7];


`line 96 "oc8051_indi_addr.v" 0
 
always @(posedge clk or posedge rst)
begin
  if (rst) begin
    buff[3'b000] <= #1 8'h00;
    buff[3'b001] <= #1 8'h00;
    buff[3'b010] <= #1 8'h00;
    buff[3'b011] <= #1 8'h00;
    buff[3'b100] <= #1 8'h00;
    buff[3'b101] <= #1 8'h00;
    buff[3'b110] <= #1 8'h00;
    buff[3'b111] <= #1 8'h00;
  end else begin
    if ((wr) & !(wr_bit_r)) begin
      case (wr_addr) 
        8'h00: buff[3'b000] <= #1 data_in;
        8'h01: buff[3'b001] <= #1 data_in;
        8'h08: buff[3'b010] <= #1 data_in;
        8'h09: buff[3'b011] <= #1 data_in;
        8'h10: buff[3'b100] <= #1 data_in;
        8'h11: buff[3'b101] <= #1 data_in;
        8'h18: buff[3'b110] <= #1 data_in;
        8'h19: buff[3'b111] <= #1 data_in;
      endcase
    end
  end
end


`line 125 "oc8051_indi_addr.v" 0
 

`line 127 "oc8051_indi_addr.v" 0
assign ri_out = (({3'b000, bank, 2'b00, sel}==wr_addr) & (wr) & !wr_bit_r) ?
                 data_in : buff[{bank, sel}];



`line 132 "oc8051_indi_addr.v" 0
always @(posedge clk or posedge rst)
  if (rst) begin
    wr_bit_r <= #1 1'b0;
  end else begin
    wr_bit_r <= #1 wr_bit;
  end

`line 139 "oc8051_indi_addr.v" 0
endmodule

`line 141 "oc8051_indi_addr.v" 2
