`begin_keywords "1800-2012"
`line 1 "sha1_w_mem.v" 1
 

`line 3 "sha1_w_mem.v" 0
 
 
 
 


`line 9 "sha1_w_mem.v" 0
 
 

`line 12 "sha1_w_mem.v" 0
 
 
 

`line 16 "sha1_w_mem.v" 0
 
 

`line 19 "sha1_w_mem.v" 0
 
 
 
 

`line 24 "sha1_w_mem.v" 0
 
 
 
 
 
 
 
 
 
 
 
 

`line 37 "sha1_w_mem.v" 0
 

`line 39 "sha1_w_mem.v" 0
module sha1_w_mem(
                  input wire           clk,
                  input wire           reset_n,

`line 43 "sha1_w_mem.v" 0
                  input wire [511 : 0] block,

`line 45 "sha1_w_mem.v" 0
                  input wire           init,
                  input wire           next,

`line 48 "sha1_w_mem.v" 0
                  output wire [31 : 0] w
                 );


`line 52 "sha1_w_mem.v" 0
   
   
   
  parameter SHA1_ROUNDS = 79;

`line 57 "sha1_w_mem.v" 0
  parameter CTRL_IDLE   = 1'b0;
  parameter CTRL_UPDATE = 1'b1;


`line 61 "sha1_w_mem.v" 0
   
   
   
  reg [31 : 0] w_mem [0 : 15];
  reg [31 : 0] w_mem00_new;
  reg [31 : 0] w_mem01_new;
  reg [31 : 0] w_mem02_new;
  reg [31 : 0] w_mem03_new;
  reg [31 : 0] w_mem04_new;
  reg [31 : 0] w_mem05_new;
  reg [31 : 0] w_mem06_new;
  reg [31 : 0] w_mem07_new;
  reg [31 : 0] w_mem08_new;
  reg [31 : 0] w_mem09_new;
  reg [31 : 0] w_mem10_new;
  reg [31 : 0] w_mem11_new;
  reg [31 : 0] w_mem12_new;
  reg [31 : 0] w_mem13_new;
  reg [31 : 0] w_mem14_new;
  reg [31 : 0] w_mem15_new;
  reg          w_mem_we;

`line 83 "sha1_w_mem.v" 0
  reg [6 : 0] w_ctr_reg;
  reg [6 : 0] w_ctr_new;
  reg         w_ctr_we;
  reg         w_ctr_inc;
  reg         w_ctr_rst;

`line 89 "sha1_w_mem.v" 0
  reg         sha1_w_mem_ctrl_reg;
  reg         sha1_w_mem_ctrl_new;
  reg         sha1_w_mem_ctrl_we;


`line 94 "sha1_w_mem.v" 0
   
   
   
  reg [31 : 0] w_tmp;
  reg [31 : 0] w_new;


`line 101 "sha1_w_mem.v" 0
   
   
   
  assign w = w_tmp;


`line 107 "sha1_w_mem.v" 0
   
   
  
   
   
   
   
  always @ (posedge clk or negedge reset_n)
    begin
      if (!reset_n)
        begin
          w_mem[00]           <= 32'h00000000;
          w_mem[01]           <= 32'h00000000;
          w_mem[02]           <= 32'h00000000;
          w_mem[03]           <= 32'h00000000;
          w_mem[04]           <= 32'h00000000;
          w_mem[05]           <= 32'h00000000;
          w_mem[06]           <= 32'h00000000;
          w_mem[07]           <= 32'h00000000;
          w_mem[08]           <= 32'h00000000;
          w_mem[09]           <= 32'h00000000;
          w_mem[10]           <= 32'h00000000;
          w_mem[11]           <= 32'h00000000;
          w_mem[12]           <= 32'h00000000;
          w_mem[13]           <= 32'h00000000;
          w_mem[14]           <= 32'h00000000;
          w_mem[15]           <= 32'h00000000;
          w_ctr_reg           <= 7'h00;
          sha1_w_mem_ctrl_reg <= CTRL_IDLE;
        end
      else
        begin
          if (w_mem_we)
            begin
              w_mem[00] <= w_mem00_new;
              w_mem[01] <= w_mem01_new;
              w_mem[02] <= w_mem02_new;
              w_mem[03] <= w_mem03_new;
              w_mem[04] <= w_mem04_new;
              w_mem[05] <= w_mem05_new;
              w_mem[06] <= w_mem06_new;
              w_mem[07] <= w_mem07_new;
              w_mem[08] <= w_mem08_new;
              w_mem[09] <= w_mem09_new;
              w_mem[10] <= w_mem10_new;
              w_mem[11] <= w_mem11_new;
              w_mem[12] <= w_mem12_new;
              w_mem[13] <= w_mem13_new;
              w_mem[14] <= w_mem14_new;
              w_mem[15] <= w_mem15_new;
            end

`line 159 "sha1_w_mem.v" 0
          if (w_ctr_we)
            begin
              w_ctr_reg <= w_ctr_new;
            end

`line 164 "sha1_w_mem.v" 0
          if (sha1_w_mem_ctrl_we)
            begin
              sha1_w_mem_ctrl_reg <= sha1_w_mem_ctrl_new;
            end

`line 169 "sha1_w_mem.v" 0
        end
    end  


`line 173 "sha1_w_mem.v" 0
   
   
  
   
   
   
  always @*
    begin 
      if (w_ctr_reg < 16)
        begin
          w_tmp = w_mem[w_ctr_reg[3 : 0]];
        end
      else
        begin
          w_tmp = w_new;
        end
    end  


`line 192 "sha1_w_mem.v" 0
   
   
  
   
   
   
  reg [31 : 0] w_0;
  reg [31 : 0] w_2;
  reg [31 : 0] w_8;
  reg [31 : 0] w_13;
  reg [31 : 0] w_16;
  always @*
    begin 

`line 206 "sha1_w_mem.v" 0
      w_mem00_new = 32'h00000000;
      w_mem01_new = 32'h00000000;
      w_mem02_new = 32'h00000000;
      w_mem03_new = 32'h00000000;
      w_mem04_new = 32'h00000000;
      w_mem05_new = 32'h00000000;
      w_mem06_new = 32'h00000000;
      w_mem07_new = 32'h00000000;
      w_mem08_new = 32'h00000000;
      w_mem09_new = 32'h00000000;
      w_mem10_new = 32'h00000000;
      w_mem11_new = 32'h00000000;
      w_mem12_new = 32'h00000000;
      w_mem13_new = 32'h00000000;
      w_mem14_new = 32'h00000000;
      w_mem15_new = 32'h00000000;
      w_mem_we    = 0;

`line 224 "sha1_w_mem.v" 0
      w_0   = w_mem[0];
      w_2   = w_mem[2];
      w_8   = w_mem[8];
      w_13  = w_mem[13];
      w_16  = w_13 ^ w_8 ^ w_2 ^ w_0;
      w_new = {w_16[30 : 0], w_16[31]};

`line 231 "sha1_w_mem.v" 0
      if (init)
        begin
          w_mem00_new = block[511 : 480];
          w_mem01_new = block[479 : 448];
          w_mem02_new = block[447 : 416];
          w_mem03_new = block[415 : 384];
          w_mem04_new = block[383 : 352];
          w_mem05_new = block[351 : 320];
          w_mem06_new = block[319 : 288];
          w_mem07_new = block[287 : 256];
          w_mem08_new = block[255 : 224];
          w_mem09_new = block[223 : 192];
          w_mem10_new = block[191 : 160];
          w_mem11_new = block[159 : 128];
          w_mem12_new = block[127 :  96];
          w_mem13_new = block[95  :  64];
          w_mem14_new = block[63  :  32];
          w_mem15_new = block[31  :   0];
          w_mem_we    = 1;
        end

`line 252 "sha1_w_mem.v" 0
      else if (w_ctr_reg > 15)
        begin
          w_mem00_new = w_mem[01];
          w_mem01_new = w_mem[02];
          w_mem02_new = w_mem[03];
          w_mem03_new = w_mem[04];
          w_mem04_new = w_mem[05];
          w_mem05_new = w_mem[06];
          w_mem06_new = w_mem[07];
          w_mem07_new = w_mem[08];
          w_mem08_new = w_mem[09];
          w_mem09_new = w_mem[10];
          w_mem10_new = w_mem[11];
          w_mem11_new = w_mem[12];
          w_mem12_new = w_mem[13];
          w_mem13_new = w_mem[14];
          w_mem14_new = w_mem[15];
          w_mem15_new = w_new;
          w_mem_we    = 1;
        end
    end  


`line 275 "sha1_w_mem.v" 0
   
   
  
   
   
   
  always @*
    begin 
      w_ctr_new = 7'h00;
      w_ctr_we  = 0;

`line 286 "sha1_w_mem.v" 0
      if (w_ctr_rst)
        begin
          w_ctr_new = 7'h00;
          w_ctr_we  = 1;
        end

`line 292 "sha1_w_mem.v" 0
      if (w_ctr_inc)
        begin
          w_ctr_new = w_ctr_reg + 7'h01;
          w_ctr_we  = 1;
        end
    end  


`line 300 "sha1_w_mem.v" 0
   
   
  
   
   
  always @*
    begin 
      w_ctr_rst           = 0;
      w_ctr_inc           = 0;
      sha1_w_mem_ctrl_new = CTRL_IDLE;
      sha1_w_mem_ctrl_we  = 0;

`line 312 "sha1_w_mem.v" 0
      case (sha1_w_mem_ctrl_reg)
        CTRL_IDLE:
          begin
            if (init)
              begin
                w_ctr_rst           = 1;
                sha1_w_mem_ctrl_new = CTRL_UPDATE;
                sha1_w_mem_ctrl_we  = 1;
              end
          end

`line 323 "sha1_w_mem.v" 0
        CTRL_UPDATE:
          begin
            if (next)
              begin
                w_ctr_inc = 1;
              end

`line 330 "sha1_w_mem.v" 0
            if (w_ctr_reg == SHA1_ROUNDS)
              begin
                sha1_w_mem_ctrl_new = CTRL_IDLE;
                sha1_w_mem_ctrl_we  = 1;
              end
          end
      endcase  
    end  
endmodule  

`line 340 "sha1_w_mem.v" 0
 
 
 

`line 344 "sha1_w_mem.v" 2
